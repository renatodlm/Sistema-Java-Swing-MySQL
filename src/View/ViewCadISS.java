/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import conexao.ConexaoBanco;
import java.awt.Toolkit;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import util.Exporter;
import util.Mascaras;
import util.Moeda;
import util.Porcentagem;

/**
 *
 * @author Work
 */
public class ViewCadISS extends javax.swing.JFrame {

    /**
     * Creates new form ViewCadISS
     */
    public ViewCadISS() {
        initComponents();
        SetIcone();
        carregarAliquotas();
        setLocationRelativeTo(null);
        jLVerificarCampo.setVisible(false);
        tfAlicota.requestFocus();
    }

    void limparCamposBanco() {
        tfCodigo.setText("0");
        tfAlicota.setText("0,00%");
        jLVerificarCampo.setVisible(false);
    }

    void carregarAliquotas() {

        try {
            if ((int) jTableAliquota.getRowCount() > 0) {
                DefaultTableModel modelo = (DefaultTableModel) jTableAliquota.getModel();
                modelo.setNumRows(0);
            }
            DefaultTableModel modelo = (DefaultTableModel) jTableAliquota.getModel();

            String consultar = "SELECT * FROM alicota order by codigo desc";
            String[] datos = new String[3];
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(consultar);
            while (rs.next()) {
                datos[0] = rs.getString("codigo");
                datos[1] = rs.getString("ali_iss");
                datos[2] = rs.getString("ali_data");

                modelo.addRow(datos);
            }
            jTableAliquota.setModel(modelo);

        } catch (SQLException ex) {
            Logger.getLogger(ViewCadISS.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCadOcupacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCadOcupacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCadOcupacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCadOcupacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCadISS().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfCodigo = new javax.swing.JTextField();
        jLBancoConta = new javax.swing.JLabel();
        kGContaBancaria = new keeptoo.KGradientPanel();
        jLBancoAgencia = new javax.swing.JLabel();
        btSalvarBanco = new javax.swing.JButton();
        btExcluirBanco = new javax.swing.JButton();
        tfAlicota = new javax.swing.JFormattedTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableAliquota = new javax.swing.JTable();
        jbVisualizarConta1 = new javax.swing.JButton();
        kGradientPanel15 = new keeptoo.KGradientPanel();
        kGradientPanel7 = new keeptoo.KGradientPanel();
        kGradientPanel13 = new keeptoo.KGradientPanel();
        kGradientPanel23 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLVerificarCampo = new javax.swing.JLabel();

        tfCodigo.setEditable(false);
        tfCodigo.setBackground(new java.awt.Color(227, 236, 245));
        tfCodigo.setText("Novo");
        tfCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfCodigoFocusLost(evt);
            }
        });

        jLBancoConta.setText("Codigo");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CADASTRO DE ALÍQUOTA");
        setResizable(false);

        kGContaBancaria.setkBorderRadius(0);
        kGContaBancaria.setkEndColor(new java.awt.Color(234, 239, 243));
        kGContaBancaria.setkGradientFocus(0);
        kGContaBancaria.setkStartColor(new java.awt.Color(255, 255, 255));
        kGContaBancaria.setPreferredSize(new java.awt.Dimension(1260, 240));
        kGContaBancaria.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLBancoAgencia.setText("Alicota");
        kGContaBancaria.add(jLBancoAgencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 90, -1));

        btSalvarBanco.setBackground(new java.awt.Color(0, 153, 0));
        btSalvarBanco.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSalvarBanco.setForeground(new java.awt.Color(255, 255, 255));
        btSalvarBanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/disk.png"))); // NOI18N
        btSalvarBanco.setText("Salvar");
        btSalvarBanco.setPreferredSize(new java.awt.Dimension(120, 35));
        btSalvarBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarBancoActionPerformed(evt);
            }
        });
        kGContaBancaria.add(btSalvarBanco, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 360, -1, -1));

        btExcluirBanco.setBackground(new java.awt.Color(255, 0, 0));
        btExcluirBanco.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btExcluirBanco.setForeground(new java.awt.Color(255, 255, 255));
        btExcluirBanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/clear.png"))); // NOI18N
        btExcluirBanco.setPreferredSize(new java.awt.Dimension(60, 40));
        btExcluirBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirBancoActionPerformed(evt);
            }
        });
        kGContaBancaria.add(btExcluirBanco, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 90, -1, -1));

        tfAlicota.setBackground(new java.awt.Color(227, 236, 245));
        tfAlicota.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00%"))));
        tfAlicota.setText("0,00%");
        tfAlicota.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfAlicotaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfAlicotaFocusLost(evt);
            }
        });
        tfAlicota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfAlicotaKeyPressed(evt);
            }
        });
        kGContaBancaria.add(tfAlicota, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 130, 30));

        jScrollPane6.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(1220, 180));

        jTableAliquota.setAutoCreateRowSorter(true);
        jTableAliquota.setBackground(new java.awt.Color(247, 247, 247));
        jTableAliquota.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jTableAliquota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Alícota", "Data de Registro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAliquota.setGridColor(new java.awt.Color(247, 247, 247));
        jTableAliquota.setMinimumSize(new java.awt.Dimension(610, 0));
        jTableAliquota.setRowHeight(20);
        jTableAliquota.setSelectionBackground(new java.awt.Color(0, 153, 0));
        jTableAliquota.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(jTableAliquota);
        if (jTableAliquota.getColumnModel().getColumnCount() > 0) {
            jTableAliquota.getColumnModel().getColumn(0).setMinWidth(0);
            jTableAliquota.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTableAliquota.getColumnModel().getColumn(0).setMaxWidth(0);
            jTableAliquota.getColumnModel().getColumn(1).setMinWidth(150);
            jTableAliquota.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTableAliquota.getColumnModel().getColumn(1).setMaxWidth(150);
        }

        kGContaBancaria.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 620, 210));

        jbVisualizarConta1.setBackground(new java.awt.Color(0, 153, 0));
        jbVisualizarConta1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbVisualizarConta1.setForeground(new java.awt.Color(255, 255, 255));
        jbVisualizarConta1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/excel.png"))); // NOI18N
        jbVisualizarConta1.setText("EXPORTAR");
        jbVisualizarConta1.setPreferredSize(new java.awt.Dimension(150, 35));
        jbVisualizarConta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVisualizarConta1ActionPerformed(evt);
            }
        });
        kGContaBancaria.add(jbVisualizarConta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, -1, -1));

        kGradientPanel15.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel15.setkBorderRadius(0);
        kGradientPanel15.setkEndColor(new java.awt.Color(146, 171, 197));
        kGradientPanel15.setkStartColor(new java.awt.Color(146, 171, 197));
        kGradientPanel15.setName(""); // NOI18N
        kGradientPanel15.setPreferredSize(new java.awt.Dimension(1300, 40));

        kGradientPanel7.setkBorderRadius(0);
        kGradientPanel7.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel7.setkGradientFocus(125);
        kGradientPanel7.setkStartColor(new java.awt.Color(234, 239, 243));

        org.jdesktop.layout.GroupLayout kGradientPanel7Layout = new org.jdesktop.layout.GroupLayout(kGradientPanel7);
        kGradientPanel7.setLayout(kGradientPanel7Layout);
        kGradientPanel7Layout.setHorizontalGroup(
            kGradientPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 271, Short.MAX_VALUE)
        );
        kGradientPanel7Layout.setVerticalGroup(
            kGradientPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 20, Short.MAX_VALUE)
        );

        kGradientPanel13.setkBorderRadius(0);
        kGradientPanel13.setkEndColor(new java.awt.Color(234, 239, 243));
        kGradientPanel13.setkGradientFocus(250);
        kGradientPanel13.setkStartColor(new java.awt.Color(255, 255, 255));

        org.jdesktop.layout.GroupLayout kGradientPanel13Layout = new org.jdesktop.layout.GroupLayout(kGradientPanel13);
        kGradientPanel13.setLayout(kGradientPanel13Layout);
        kGradientPanel13Layout.setHorizontalGroup(
            kGradientPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 380, Short.MAX_VALUE)
        );
        kGradientPanel13Layout.setVerticalGroup(
            kGradientPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 20, Short.MAX_VALUE)
        );

        kGradientPanel23.setkBorderRadius(0);
        kGradientPanel23.setkEndColor(new java.awt.Color(146, 171, 197));
        kGradientPanel23.setkGradientFocus(125);
        kGradientPanel23.setkStartColor(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("Cadastrar Alíquota do Mês");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/Calendar.png"))); // NOI18N

        org.jdesktop.layout.GroupLayout kGradientPanel23Layout = new org.jdesktop.layout.GroupLayout(kGradientPanel23);
        kGradientPanel23.setLayout(kGradientPanel23Layout);
        kGradientPanel23Layout.setHorizontalGroup(
            kGradientPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(kGradientPanel23Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jLabel2)
                .add(6, 6, 6)
                .add(jLabel1)
                .addContainerGap(134, Short.MAX_VALUE))
        );
        kGradientPanel23Layout.setVerticalGroup(
            kGradientPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, kGradientPanel23Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(kGradientPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout kGradientPanel15Layout = new org.jdesktop.layout.GroupLayout(kGradientPanel15);
        kGradientPanel15.setLayout(kGradientPanel15Layout);
        kGradientPanel15Layout.setHorizontalGroup(
            kGradientPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(kGradientPanel15Layout.createSequentialGroup()
                .add(68, 68, 68)
                .add(kGradientPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 271, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(kGradientPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(kGradientPanel15Layout.createSequentialGroup()
                .add(kGradientPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 370, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        kGradientPanel15Layout.setVerticalGroup(
            kGradientPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(kGradientPanel15Layout.createSequentialGroup()
                .add(kGradientPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(kGradientPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, kGradientPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, kGradientPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        kGContaBancaria.add(kGradientPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 50));

        jLVerificarCampo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLVerificarCampo.setForeground(new java.awt.Color(255, 0, 0));
        jLVerificarCampo.setText("Preencha corretamente o campo.");
        kGContaBancaria.add(jLVerificarCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 300, 20));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 710, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(kGContaBancaria, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 435, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(kGContaBancaria, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCodigoFocusLost
        // CONTA BANCO
        this.tfCodigo.setText(tfCodigo.getText().toUpperCase());
    }//GEN-LAST:event_tfCodigoFocusLost

    private void btSalvarBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarBancoActionPerformed
        // TODO add your handling code here:
        if (!(tfAlicota.getText().equals("") || (Double.parseDouble(new Porcentagem().ValorSemPercentual(tfAlicota.getText()))) <= 0)) {
            Date d = new Date();
            Locale local = new Locale("pt", "BR");
            SimpleDateFormat format = new SimpleDateFormat("EEEE, d' de 'MMMM' de 'yyyy", local);
            String DataCadastrar = String.format((format.format(d)));

            String AlicotaDB = (new Porcentagem().ValorSemPercentual(tfAlicota.getText()));

            String insertar = "INSERT INTO alicota(ali_iss,ali_data) VALUES (?,?)";
            try {
                // variável para obter o número de bytes de uma imagem.
                PreparedStatement pst = cn.prepareStatement(insertar);
                pst.setString(1, AlicotaDB);
                pst.setString(2, DataCadastrar);

                int i = pst.executeUpdate();
                if (i > 0) {
                    JOptionPane.showMessageDialog(null, "BANCO SALVO COM SUCESSO!");
                }
                carregarAliquotas();
                limparCamposBanco();
            } catch (SQLException ex) {
                Logger.getLogger(ViewCadISS.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jLVerificarCampo.setVisible(true);
        }
    }//GEN-LAST:event_btSalvarBancoActionPerformed

    private void btExcluirBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirBancoActionPerformed
        // TODO add your handling code here:
        int fila = jTableAliquota.getSelectedRow();
        if (fila > -1) {
            String cod = jTableAliquota.getValueAt(fila, 0).toString();
            String sqlElim = "DELETE FROM alicota WHERE codigo='" + cod + "'";
            try {
                PreparedStatement pst = cn.prepareStatement(sqlElim);
                int n = pst.executeUpdate();
                if (n > 0) {
                    JOptionPane.showMessageDialog(null, "O registro foram Excluidos com sucesso!");
                    carregarAliquotas();

                } else {
                    JOptionPane.showMessageDialog(null, "Ocorreu um erro ao Excluir dados");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ViewCadISS.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btExcluirBancoActionPerformed

    private void tfAlicotaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfAlicotaFocusLost
        // TODO add your handling code here:
        try {
            if ("".equals(tfAlicota.getText())) {
                tfAlicota.setText("0,00%");
            }
            tfAlicota.setText(new Porcentagem().ValorComPercentual(tfAlicota.getText()));
        } catch (NumberFormatException e) {
            tfAlicota.setText("0,00%");
        }
    }//GEN-LAST:event_tfAlicotaFocusLost

    private void tfAlicotaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfAlicotaFocusGained
        // TODO add your handling code here:
        if ("0,00%".equals(tfAlicota.getText())) {
            tfAlicota.setText("");
        }
    }//GEN-LAST:event_tfAlicotaFocusGained

    private void jbVisualizarConta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVisualizarConta1ActionPerformed
        // TODO add your handling code here:

        if (jTableAliquota.getRowCount() > 0) {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de excel", "xls");
            chooser.setFileFilter(filter);
            chooser.setDialogTitle("Salvar Arquivos");
            chooser.setAcceptAllFileFilterUsed(false);
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                List<JTable> tb = new ArrayList<JTable>();
                List<String> nom = new ArrayList<String>();
                tb.add(jTableAliquota);
                nom.add("Por Agentes");
                String file = chooser.getSelectedFile().toString().concat(".xls");
                try {
                    Exporter e = new Exporter(new File(file), tb, nom);
                    if (e.export()) {
                        JOptionPane.showMessageDialog(null, "Os dados foram exportados com sucesso!", "ARQUIVO EXCEL", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Exception Erro " + e.getMessage(), " Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não há dados para exportar na tabela", "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbVisualizarConta1ActionPerformed

    private void tfAlicotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAlicotaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            btSalvarBanco.requestFocus();
        }

    }//GEN-LAST:event_tfAlicotaKeyPressed

    ConexaoBanco cc = new ConexaoBanco();
    Connection cn = cc.conectar();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExcluirBanco;
    private javax.swing.JButton btSalvarBanco;
    private javax.swing.JLabel jLBancoAgencia;
    private javax.swing.JLabel jLBancoConta;
    private javax.swing.JLabel jLVerificarCampo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTableAliquota;
    private javax.swing.JButton jbVisualizarConta1;
    private keeptoo.KGradientPanel kGContaBancaria;
    private keeptoo.KGradientPanel kGradientPanel13;
    private keeptoo.KGradientPanel kGradientPanel15;
    private keeptoo.KGradientPanel kGradientPanel23;
    private keeptoo.KGradientPanel kGradientPanel7;
    private javax.swing.JFormattedTextField tfAlicota;
    private javax.swing.JTextField tfCodigo;
    // End of variables declaration//GEN-END:variables

    private void SetIcone() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ictrol.png")));
    }
}
