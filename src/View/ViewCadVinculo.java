/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import conexao.ConexaoBanco;
import java.awt.Toolkit;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import util.Exporter;

/**
 *
 * @author Work
 */
public final class ViewCadVinculo extends javax.swing.JFrame {

    /**
     * Creates new form ViewCadVinculo
     */
    public ViewCadVinculo() {
        initComponents();
        SetIcone();
        bloquearbotoesatt();
        carregarUsuarios();
    }

    void desbloquearbotoesatt() {
        btAtualizar.setEnabled(true);
        btSalvar.setEnabled(false);
        btCancelar.setEnabled(true);
    }

    void bloquearbotoesatt() {
        btAtualizar.setEnabled(false);
        btSalvar.setEnabled(true);
        btCancelar.setEnabled(false);
    }

    void limparCamposBanco() {
        tfNome.setText("");
        tfCodigo.setText("Novo");
        cbDepartamento.setSelectedIndex(0);
    }

    void carregarUsuarios() {

        if ((int) tbUsuarios.getRowCount() > 0) {
            DefaultTableModel modelo = (DefaultTableModel) tbUsuarios.getModel();
            modelo.setNumRows(0);
        }
        try {
            DefaultTableModel model = (DefaultTableModel) tbUsuarios.getModel();

            int codigo = 0;
            if (!"Novo".equals(tfCodigo.getText())) {
                codigo = (Integer.parseInt(tfCodigo.getText()));
            }

            String consultar = "SELECT * FROM vinculo";
            String[] datos = new String[3];
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(consultar);
            while (rs.next()) {
                datos[0] = rs.getString("codigo");
                datos[1] = rs.getString("vinc_descricao");
                datos[2] = rs.getString("vinc_departamento");

                model.addRow(datos);
            }
            tbUsuarios.setModel(model);

        } catch (SQLException ex) {
            Logger.getLogger(ViewCadVinculo.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGContaBancaria = new keeptoo.KGradientPanel();
        jLBanco = new javax.swing.JLabel();
        jLBancoObs = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbUsuarios = new javax.swing.JTable();
        tfNome = new javax.swing.JTextField();
        btSalvar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        tfCodigo = new javax.swing.JTextField();
        jbExportar = new javax.swing.JButton();
        cbDepartamento = new javax.swing.JComboBox<String>();
        kGradientPanel15 = new keeptoo.KGradientPanel();
        kGradientPanel7 = new keeptoo.KGradientPanel();
        kGradientPanel13 = new keeptoo.KGradientPanel();
        kGradientPanel23 = new keeptoo.KGradientPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        kGContaBancaria.setkBorderRadius(0);
        kGContaBancaria.setkEndColor(new java.awt.Color(234, 239, 243));
        kGContaBancaria.setkGradientFocus(0);
        kGContaBancaria.setkStartColor(new java.awt.Color(255, 255, 255));
        kGContaBancaria.setMinimumSize(new java.awt.Dimension(782, 421));
        kGContaBancaria.setPreferredSize(new java.awt.Dimension(782, 421));
        kGContaBancaria.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLBanco.setText("Permissão");
        kGContaBancaria.add(jLBanco, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 170, -1));

        jLBancoObs.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLBancoObs.setText("Nome:");
        kGContaBancaria.add(jLBancoObs, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, 120, -1));

        jScrollPane6.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(1170, 170));

        tbUsuarios.setAutoCreateRowSorter(true);
        tbUsuarios.setBackground(new java.awt.Color(247, 247, 247));
        tbUsuarios.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        tbUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod.", "Permissão", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbUsuarios.setGridColor(new java.awt.Color(247, 247, 247));
        tbUsuarios.setMinimumSize(new java.awt.Dimension(610, 0));
        tbUsuarios.setRowHeight(20);
        tbUsuarios.setSelectionBackground(new java.awt.Color(0, 153, 0));
        tbUsuarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(tbUsuarios);
        if (tbUsuarios.getColumnModel().getColumnCount() > 0) {
            tbUsuarios.getColumnModel().getColumn(0).setMinWidth(0);
            tbUsuarios.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbUsuarios.getColumnModel().getColumn(0).setMaxWidth(0);
            tbUsuarios.getColumnModel().getColumn(1).setMinWidth(150);
            tbUsuarios.getColumnModel().getColumn(1).setPreferredWidth(150);
            tbUsuarios.getColumnModel().getColumn(1).setMaxWidth(150);
        }

        kGContaBancaria.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 560, 230));

        tfNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNomeFocusLost(evt);
            }
        });
        kGContaBancaria.add(tfNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, 260, 28));

        btSalvar.setBackground(new java.awt.Color(0, 153, 0));
        btSalvar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/disk.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setPreferredSize(new java.awt.Dimension(120, 35));
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        kGContaBancaria.add(btSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, -1, -1));

        btCancelar.setBackground(new java.awt.Color(255, 102, 0));
        btCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/abort.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.setPreferredSize(new java.awt.Dimension(120, 35));
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        kGContaBancaria.add(btCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 240, -1, -1));

        btExcluir.setBackground(new java.awt.Color(255, 0, 0));
        btExcluir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/clear.png"))); // NOI18N
        btExcluir.setPreferredSize(new java.awt.Dimension(50, 30));
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        kGContaBancaria.add(btExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, -1, -1));

        btAlterar.setBackground(new java.awt.Color(0, 102, 255));
        btAlterar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAlterar.setForeground(new java.awt.Color(255, 255, 255));
        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/page_edit.png"))); // NOI18N
        btAlterar.setPreferredSize(new java.awt.Dimension(50, 30));
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });
        kGContaBancaria.add(btAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, -1));

        btAtualizar.setBackground(new java.awt.Color(56, 178, 255));
        btAtualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/page_refresh.png"))); // NOI18N
        btAtualizar.setText("Atualizar");
        btAtualizar.setPreferredSize(new java.awt.Dimension(120, 35));
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });
        kGContaBancaria.add(btAtualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 190, -1, -1));

        tfCodigo.setEditable(false);
        tfCodigo.setBackground(new java.awt.Color(153, 153, 255));
        tfCodigo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfCodigo.setForeground(new java.awt.Color(255, 255, 255));
        tfCodigo.setText("Novo");
        tfCodigo.setPreferredSize(new java.awt.Dimension(100, 35));
        kGContaBancaria.add(tfCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jbExportar.setBackground(new java.awt.Color(0, 153, 0));
        jbExportar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbExportar.setForeground(new java.awt.Color(255, 255, 255));
        jbExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/excel.png"))); // NOI18N
        jbExportar.setText("EXPORTAR");
        jbExportar.setPreferredSize(new java.awt.Dimension(120, 35));
        jbExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExportarActionPerformed(evt);
            }
        });
        kGContaBancaria.add(jbExportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 330, 140, -1));

        cbDepartamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Operacional", "Administração", "Terceiro", "Contrato", "Temporário" }));
        cbDepartamento.setMinimumSize(new java.awt.Dimension(150, 30));
        cbDepartamento.setName(""); // NOI18N
        cbDepartamento.setPreferredSize(new java.awt.Dimension(150, 30));
        cbDepartamento.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbDepartamentoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        kGContaBancaria.add(cbDepartamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, -1, -1));

        kGradientPanel15.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel15.setkBorderRadius(0);
        kGradientPanel15.setkEndColor(new java.awt.Color(146, 171, 197));
        kGradientPanel15.setkStartColor(new java.awt.Color(146, 171, 197));
        kGradientPanel15.setName(""); // NOI18N
        kGradientPanel15.setPreferredSize(new java.awt.Dimension(1300, 40));

        kGradientPanel7.setkBorderRadius(0);
        kGradientPanel7.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel7.setkGradientFocus(125);
        kGradientPanel7.setkStartColor(new java.awt.Color(234, 239, 243));

        javax.swing.GroupLayout kGradientPanel7Layout = new javax.swing.GroupLayout(kGradientPanel7);
        kGradientPanel7.setLayout(kGradientPanel7Layout);
        kGradientPanel7Layout.setHorizontalGroup(
            kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 271, Short.MAX_VALUE)
        );
        kGradientPanel7Layout.setVerticalGroup(
            kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        kGradientPanel13.setkBorderRadius(0);
        kGradientPanel13.setkEndColor(new java.awt.Color(234, 239, 243));
        kGradientPanel13.setkGradientFocus(250);
        kGradientPanel13.setkStartColor(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout kGradientPanel13Layout = new javax.swing.GroupLayout(kGradientPanel13);
        kGradientPanel13.setLayout(kGradientPanel13Layout);
        kGradientPanel13Layout.setHorizontalGroup(
            kGradientPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        kGradientPanel13Layout.setVerticalGroup(
            kGradientPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        kGradientPanel23.setkBorderRadius(0);
        kGradientPanel23.setkEndColor(new java.awt.Color(146, 171, 197));
        kGradientPanel23.setkGradientFocus(125);
        kGradientPanel23.setkStartColor(new java.awt.Color(255, 255, 255));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 51, 102));
        jLabel29.setText("CADASTRO DE VÍNCULOS");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/Boss.png"))); // NOI18N

        javax.swing.GroupLayout kGradientPanel23Layout = new javax.swing.GroupLayout(kGradientPanel23);
        kGradientPanel23.setLayout(kGradientPanel23Layout);
        kGradientPanel23Layout.setHorizontalGroup(
            kGradientPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );
        kGradientPanel23Layout.setVerticalGroup(
            kGradientPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel23Layout.createSequentialGroup()
                .addGroup(kGradientPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout kGradientPanel15Layout = new javax.swing.GroupLayout(kGradientPanel15);
        kGradientPanel15.setLayout(kGradientPanel15Layout);
        kGradientPanel15Layout.setHorizontalGroup(
            kGradientPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel15Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(kGradientPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kGradientPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(kGradientPanel15Layout.createSequentialGroup()
                .addComponent(kGradientPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        kGradientPanel15Layout.setVerticalGroup(
            kGradientPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel15Layout.createSequentialGroup()
                .addComponent(kGradientPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(kGradientPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kGradientPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        kGContaBancaria.add(kGradientPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 782, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(kGContaBancaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(kGContaBancaria, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNomeFocusLost
        // Observações do Banco
        this.tfNome.setText(tfNome.getText());
    }//GEN-LAST:event_tfNomeFocusLost

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        if ((tfNome.getText().equals("")) || cbDepartamento.getSelectedIndex() > 0) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);

        } else {
            String insertar = "INSERT INTO vinculo(vinc_descricao,vinc_departamento) VALUES (?,?)";
            try {
                // variável para obter o número de bytes de uma imagem.
                PreparedStatement pst = cn.prepareStatement(insertar);
                pst.setString(1, tfNome.getText());
                pst.setString(2, cbDepartamento.getSelectedItem().toString());

                int i = pst.executeUpdate();
                if (i > 0) {
                    JOptionPane.showMessageDialog(null, "Vínculo salvo com sucesso!");
                }
                //numeros();
                carregarUsuarios();
                limparCamposBanco();
            } catch (SQLException ex) {
                Logger.getLogger(ViewCadVinculo.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Preencha todos os campos");
            }
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        carregarUsuarios();
        bloquearbotoesatt();
        limparCamposBanco();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // TODO add your handling code here:
        int fila = tbUsuarios.getSelectedRow();
        if (fila > -1) {
            String cod = tbUsuarios.getValueAt(fila, 0).toString();
            String sqlElim = "DELETE FROM vinculo WHERE codigo='" + cod + "'";
            try {
                PreparedStatement pst = cn.prepareStatement(sqlElim);
                int n = pst.executeUpdate();
                if (n > 0) {
                    JOptionPane.showMessageDialog(null, "Os dados foram apagados com sucesso!");
                    carregarUsuarios();

                } else {
                    JOptionPane.showMessageDialog(null, "Ocorreu um erro ao apagar os dados");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ViewCadVinculo.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        // TODO add your handling code here:
        int fila = tbUsuarios.getSelectedRow();
        if (fila >= 0) {
            btAtualizar.setEnabled(true);
            String cod = tbUsuarios.getValueAt(fila, 0).toString();
            String descricao = tbUsuarios.getValueAt(fila, 1).toString();
            String departamento = tbUsuarios.getValueAt(fila, 2).toString();
            tfCodigo.setText(cod);
            tfNome.setText(descricao);
            cbDepartamento.setSelectedItem(departamento);
            desbloquearbotoesatt();
        } else {
            JOptionPane.showMessageDialog(null, "Escolha uma linha na tabela antes!");
        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        // TODO add your handling code here:
        int cod = 0;
        cod = (Integer.parseInt(tfCodigo.getText()));
        try {
            String sql = "UPDATE vinculo SET vinc_descricao = ?, "
                    + "vinc_departamento = ?"
                    + "WHERE codigo = '" + tfCodigo.getText() + "'";

            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, tfNome.getText());
            pst.setString(2, cbDepartamento.getSelectedItem().toString());

            int n = pst.executeUpdate();
            if (n > 0) {
                JOptionPane.showMessageDialog(null, "Os dados foram atualizados com sucesso!");
                carregarUsuarios();
                bloquearbotoesatt();
                limparCamposBanco();
            } else {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro ao atualizar os dados");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewCadUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void jbExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExportarActionPerformed

        if (tbUsuarios.getRowCount() > 0) {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de excel", "xls");
            chooser.setFileFilter(filter);
            chooser.setDialogTitle("Guardar archivo");
            chooser.setAcceptAllFileFilterUsed(false);
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                List<JTable> tb = new ArrayList<JTable>();
                List<String> nom = new ArrayList<String>();
                tb.add(tbUsuarios);
                nom.add("Ocupação");
                String file = chooser.getSelectedFile().toString().concat(".xls");
                try {
                    Exporter e = new Exporter(new File(file), tb, nom);
                    if (e.export()) {
                        JOptionPane.showMessageDialog(null, "Os dados foram exportados com sucesso!", "ARQUIVO EXCEL", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Exception erro" + e.getMessage(), " Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não há dados para exportar na tabela", "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExportarActionPerformed

    private void cbDepartamentoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbDepartamentoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:

    }//GEN-LAST:event_cbDepartamentoPopupMenuWillBecomeInvisible

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCadVinculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCadVinculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCadVinculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCadVinculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCadVinculo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox<String> cbDepartamento;
    private javax.swing.JLabel jLBanco;
    private javax.swing.JLabel jLBancoObs;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton jbExportar;
    private keeptoo.KGradientPanel kGContaBancaria;
    private keeptoo.KGradientPanel kGradientPanel13;
    private keeptoo.KGradientPanel kGradientPanel15;
    private keeptoo.KGradientPanel kGradientPanel23;
    private keeptoo.KGradientPanel kGradientPanel7;
    private javax.swing.JTable tbUsuarios;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables

    ConexaoBanco cc = new ConexaoBanco();
    Connection cn = cc.conectar();

    private void SetIcone() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ictrol.png")));
    }
}
