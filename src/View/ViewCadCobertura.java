/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerServicos;
import Model.ModelServicos;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import util.Mascaras;

/**
 *
 * @author studiomicroweb
 */
public class ViewCadCobertura extends javax.swing.JFrame {

    String tipoCadastro = "null";
    ModelServicos modelServicos = new ModelServicos();
    ControllerServicos controllerServicos = new ControllerServicos();
    ArrayList<ModelServicos> listamModelServicos = new ArrayList<ModelServicos>();

    /**
     * Creates new form ViewCadServico
     */
    public ViewCadCobertura() {
        initComponents();
        SetIcone();
        if (ViewCobertura.servico.tipoCadastro != null && ViewCobertura.servico.tipoCadastro.equals("alteracao")) {
            this.recuperarServico();
        }
        setLocationRelativeTo(null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCadOcupacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCadOcupacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCadOcupacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCadOcupacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCadCobertura().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        btSalvar = new javax.swing.JButton();
        tfCodigo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tfServico = new javax.swing.JTextField();
        kGradientPanel15 = new keeptoo.KGradientPanel();
        kGradientPanel7 = new keeptoo.KGradientPanel();
        kGradientPanel13 = new keeptoo.KGradientPanel();
        kGradientPanel23 = new keeptoo.KGradientPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(520, 230));
        setPreferredSize(new java.awt.Dimension(520, 230));
        setResizable(false);

        kGradientPanel1.setkBorderRadius(0);
        kGradientPanel1.setkEndColor(new java.awt.Color(234, 239, 243));
        kGradientPanel1.setkGradientFocus(-5);
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(520, 210));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btSalvar.setBackground(new java.awt.Color(0, 153, 0));
        btSalvar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/disk.png"))); // NOI18N
        btSalvar.setText("SALVAR");
        btSalvar.setPreferredSize(new java.awt.Dimension(150, 40));
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        kGradientPanel1.add(btSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, -1, -1));

        tfCodigo.setEnabled(false);
        kGradientPanel1.add(tfCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 80, 30));

        jLabel8.setText("Código:");
        kGradientPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        jLabel1.setText("Serviço:");
        kGradientPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, -1, -1));

        tfServico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfServicoFocusLost(evt);
            }
        });
        tfServico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfServicoKeyPressed(evt);
            }
        });
        kGradientPanel1.add(tfServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 310, 28));

        kGradientPanel15.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel15.setkBorderRadius(0);
        kGradientPanel15.setkEndColor(new java.awt.Color(146, 171, 197));
        kGradientPanel15.setkStartColor(new java.awt.Color(146, 171, 197));
        kGradientPanel15.setName(""); // NOI18N
        kGradientPanel15.setPreferredSize(new java.awt.Dimension(1300, 40));

        kGradientPanel7.setkBorderRadius(0);
        kGradientPanel7.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel7.setkGradientFocus(125);
        kGradientPanel7.setkStartColor(new java.awt.Color(234, 239, 243));

        org.jdesktop.layout.GroupLayout kGradientPanel7Layout = new org.jdesktop.layout.GroupLayout(kGradientPanel7);
        kGradientPanel7.setLayout(kGradientPanel7Layout);
        kGradientPanel7Layout.setHorizontalGroup(
            kGradientPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 271, Short.MAX_VALUE)
        );
        kGradientPanel7Layout.setVerticalGroup(
            kGradientPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 20, Short.MAX_VALUE)
        );

        kGradientPanel13.setkBorderRadius(0);
        kGradientPanel13.setkEndColor(new java.awt.Color(234, 239, 243));
        kGradientPanel13.setkGradientFocus(250);
        kGradientPanel13.setkStartColor(new java.awt.Color(255, 255, 255));

        org.jdesktop.layout.GroupLayout kGradientPanel13Layout = new org.jdesktop.layout.GroupLayout(kGradientPanel13);
        kGradientPanel13.setLayout(kGradientPanel13Layout);
        kGradientPanel13Layout.setHorizontalGroup(
            kGradientPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 380, Short.MAX_VALUE)
        );
        kGradientPanel13Layout.setVerticalGroup(
            kGradientPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 20, Short.MAX_VALUE)
        );

        kGradientPanel23.setkBorderRadius(0);
        kGradientPanel23.setkEndColor(new java.awt.Color(146, 171, 197));
        kGradientPanel23.setkGradientFocus(125);
        kGradientPanel23.setkStartColor(new java.awt.Color(255, 255, 255));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 51, 102));
        jLabel29.setText("Cadastro de Cobertura");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 51, 102));
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/Create.png"))); // NOI18N
        jLabel30.setPreferredSize(new java.awt.Dimension(60, 60));

        org.jdesktop.layout.GroupLayout kGradientPanel23Layout = new org.jdesktop.layout.GroupLayout(kGradientPanel23);
        kGradientPanel23.setLayout(kGradientPanel23Layout);
        kGradientPanel23Layout.setHorizontalGroup(
            kGradientPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, kGradientPanel23Layout.createSequentialGroup()
                .add(17, 17, 17)
                .add(jLabel30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel29, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .add(7, 7, 7))
        );
        kGradientPanel23Layout.setVerticalGroup(
            kGradientPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(kGradientPanel23Layout.createSequentialGroup()
                .add(8, 8, 8)
                .add(kGradientPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel29, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .add(jLabel30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .add(12, 12, 12))
        );

        org.jdesktop.layout.GroupLayout kGradientPanel15Layout = new org.jdesktop.layout.GroupLayout(kGradientPanel15);
        kGradientPanel15.setLayout(kGradientPanel15Layout);
        kGradientPanel15Layout.setHorizontalGroup(
            kGradientPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(kGradientPanel15Layout.createSequentialGroup()
                .add(68, 68, 68)
                .add(kGradientPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 271, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(kGradientPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(kGradientPanel15Layout.createSequentialGroup()
                .add(kGradientPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 229, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        kGradientPanel15Layout.setVerticalGroup(
            kGradientPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(kGradientPanel15Layout.createSequentialGroup()
                .add(kGradientPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(kGradientPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, kGradientPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, kGradientPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        kGradientPanel1.add(kGradientPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, -1));

        getContentPane().add(kGradientPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCpfActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        //String tipoCadastro = "novo";
        if (ViewCobertura.servico.tipoCadastro != null && ViewCobertura.servico.tipoCadastro.equals("alteracao")) {
            alteraServico();
        } else {
            salvarServico();
            ViewCobertura.servico.carregarServicos();
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void tfServicoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfServicoFocusLost
        // Letras maiusculas
        this.tfServico.setText(tfServico.getText());
    }//GEN-LAST:event_tfServicoFocusLost

    private void tfServicoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfServicoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            btSalvar.requestFocus();
        }
    }//GEN-LAST:event_tfServicoKeyPressed

    private boolean salvarServico() {
        if (tfServico.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Preencha o campo Obrigatório!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            modelServicos.setNome(this.tfServico.getText());
            //salvar 
            if (controllerServicos.salvarServicosController(modelServicos) > 0) {
                JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
                limpaCampos();
                dispose();
                ViewCobertura.servico.requestFocus();
                return true;
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
    }

    private boolean alteraServico() {
        if (tfServico.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Preencha o Campo Obrigatório!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            tipoCadastro = "alteracao";
            modelServicos.setCodigo(Integer.parseInt(this.tfCodigo.getText()));
            modelServicos.setNome(this.tfServico.getText());

            //alterar 
            if (controllerServicos.atualizarServicosController(modelServicos)) {
                JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!");
                ViewCobertura.servico.tipoCadastro = null;
                ViewCobertura.servico.carregarServicos();
                limpaCampos();
                dispose();
                ViewCobertura.servico.requestFocus();
                return true;
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao alterar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
    }

    private boolean recuperarServico() {
        //recupera os dados do banco
        try {
            //recupera os dados do banco
            modelServicos = controllerServicos.getServicosController(ViewCobertura.codigo);
            //seta os dados na interface
            this.tfCodigo.setText(String.valueOf(modelServicos.getCodigo()));
            this.tfServico.setText(modelServicos.getNome());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }

    private void limpaCampos() {
        tfCodigo.setText("NOVO");
        tfServico.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel8;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel13;
    private keeptoo.KGradientPanel kGradientPanel15;
    private keeptoo.KGradientPanel kGradientPanel23;
    private keeptoo.KGradientPanel kGradientPanel7;
    private javax.swing.JTextField tfCodigo;
    public static javax.swing.JTextField tfServico;
    // End of variables declaration//GEN-END:variables

    private void SetIcone() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ictrol.png")));
    }
}
